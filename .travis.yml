language: rust
rust: stable

install:
  - if [ -z "$NO_ADD" ]; then rustup target add "$TARGET"; fi

script:
  - cargo build --verbose --target "$TARGET"
  - if [ "$RUN" == "1" ]; then cargo test --verbose --target "$TARGET"; fi
  - if [ "$RUN" == "1" ] && [ "$TRAVIS_RUST_VERSION" == "nightly" ]; then cargo test --verbose --target "$TARGET" --features "no_std"; fi

matrix:
  include:
    # Linux
    # i686
    # stable
    - env: TARGET=i686-unknown-linux-gnu RUN=1
      rust: stable
      addons:
        apt:
          packages:
            - gcc-multilib
    # beta
    - env: TARGET=i686-unknown-linux-gnu RUN=1
      rust: beta
      addons:
        apt:
          packages:
            - gcc-multilib
    # nightly 
    - env: TARGET=i686-unknown-linux-gnu RUN=1
      rust: nightly
      addons:
        apt:
          packages:
            - gcc-multilib
    # x86_64
    # stable
    - env: TARGET=x86_64-unknown-linux-gnu RUN=1 NO_ADD=1
      rust: stable
    # beta.
    - env: TARGET=x86_64-unknown-linux-gnu RUN=1 NO_ADD=1
      rust: beta
    # nightly.
    - env: TARGET=x86_64-unknown-linux-gnu RUN=1 NO_ADD=1
      rust: nightly
    # Mac OS X
    # i686
    # stable
    - os: osx
      env: TARGET=i686-apple-darwin RUN=1
      rust: stable
    # beta
    - os: osx
      env: TARGET=i686-apple-darwin RUN=1
      rust: beta
    # nightly
    - os: osx
      env: TARGET=i686-apple-darwin RUN=1
      rust: nightly
    # x86_64
    # stable
    - os: osx
      env: TARGET=x86_64-apple-darwin RUN=1 NO_ADD=1
      rust: stable 
    # beta
    - os: osx
      env: TARGET=x86_64-apple-darwin RUN=1 NO_ADD=1
      rust: beta 
    # nightly
    - os: osx
      env: TARGET=x86_64-apple-darwin RUN=1 NO_ADD=1
      rust: nightly 
    # Android
    # i686
    # stable
    - env: TARGET=i686-linux-android
      rust: stable
    # beta
    - env: TARGET=i686-linux-android
      rust: beta
    # nightly
    - env: TARGET=i686-linux-android
      rust: nightly
    # x86_64
    # stable
    - env: TARGET=x86_64-linux-android
      rust: stable
    # beta
    - env: TARGET=x86_64-linux-android
      rust: beta
    # nightly
    - env: TARGET=x86_64-linux-android
      rust: nightly
    # ARM
    # stable
    - env: TARGET=arm-linux-androideabi
      rust: stable
    # beta
    - env: TARGET=arm-linux-androideabi
      rust: beta
    # nightly
    - env: TARGET=arm-linux-androideabi
      rust: nightly
    # AARCH64
    # stable
    - env: TARGET=aarch64-linux-android
      rust: stable
    # beta
    - env: TARGET=aarch64-linux-android
      rust: beta
    # nightly
    - env: TARGET=aarch64-linux-android
      rust: nightly
    # IOS
    # 32-bit
    # stable
    - os: osx
      osx_image: xcode9
      env: TARGET=i386-apple-ios
      rust: stable
    # beta
    - os: osx
      osx_image: xcode9
      env: TARGET=i386-apple-ios
      rust: beta
    # nightly
    - os: osx
      osx_image: xcode9
      env: TARGET=i386-apple-ios
      rust: nightly
    # 64-bit
    # stable
    - os: osx
      osx_image: xcode9
      env: TARGET=x86_64-apple-ios
      rust: stable
    # beta
    - os: osx
      osx_image: xcode9
      env: TARGET=x86_64-apple-ios
      rust: beta
    # nightly
    - os: osx
      osx_image: xcode9
      env: TARGET=x86_64-apple-ios
      rust: nightly
    # FreeBSD
    - env: TARGET=x86_64-unknown-freebsd
    # Fuchsia
    - env: TARGET=x86_64-unknown-fuchsia
    # NetBSD
    - env: TARGET=x86_64-unknown-netbsd
    # Emscripten
    # stable
    - env: TARGET=asmjs-unknown-emscripten
      rust: stable
    # beta
    - env: TARGET=asmjs-unknown-emscripten
      rust: beta
    # nightly 
    - env: TARGET=asmjs-unknown-emscripten
      rust: nightly 
